%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: main.dvi
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips main.dvi -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.12.12:1804
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro
%!
% PostScript header file pst-text.pro
% Version 97, 94/04/20
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc
{
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow
{ /String exch def
  /CharCount 0 def
  String length
  { String CharCount 1 getinterval ShowChar
    /CharCount CharCount 1 add def
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar
{ /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
    currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def

end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro
%!
% PostScript prologue for pst-grad.tex.
% Version 97, 93/05/12
% For distribution, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.
%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).
%
% Syntax:
%   R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill

/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBlue ED
  /LastGreen ED
  /LastRed ED
  /FirstBlue ED
  /FirstGreen ED
  /FirstRed ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastRed FirstRed add 2 div
  LastGreen FirstGreen add 2 div
  LastBlue FirstBlue add 2 div
  setrgbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
    MidLine { GradientLoop } repeat
  } if
  MidLine NumLines lt
  {
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoop } repeat
  } if
} def
/GradientLoop {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Red Green Blue setrgbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Blue Blue BlueIncrement add def
  /Green Green GreenIncrement add def
  /Red Red RedIncrement add def
} def

end
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (main.dvi)
@start
%DVIPSBitmapFont: Fa cmbx12 12 31
/Fa 31 121 df<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07C00F
0F788E1F>46 D<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5
264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0
007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A
6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC
4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC
017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF0010713
FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F16
C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7FC
15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0FC0
EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D80F
FEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA25E5E
5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14F8
EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E5A
12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>I<B9FC18F018FE727E19E0
26003FFEC7001F13F805017F9438003FFF060F7F727F727F727F84737E737EA2737EA273
7EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B006162193F624F5A19FF624E5B06075B
4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F095C9FC4B447CC356>68
D<BA12F8A485D8001F90C71201EF003F180F180318011800A2197E193EA3191EA21778A2
85A405F890C7FCA316011603161F92B5FCA5ED001F160316011600A2F101E01778A2F103
C0A494C7FC1907A21A80A2190FA2191FA2193FF17F0061601807181F4DB5FCBBFC61A443
447DC34A>I<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC32A>73
D<B500FE067FB512806E95B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE079F
A26E6CEE0F1FA26E6C161EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC
03C0A36E6DEC0780A26F6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485A
A26F6D485AA26F6D485AA3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA270
5BA2705BA2705BA2B6057FB6128071C7FCA2173E171C61447CC36A>77
D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC
00014848EB007F4848143F4848140F491407007F15035B1601160012FF177CA27FA26D15
3C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C
81011F810107811300020F80140003077FED007F82040F1380828212F082A282A27EA218
007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F
92C7FCD8F80714FC48C614F0480107138031467AC43E>83 D<003FBA12E0A59026FE000F
EB8003D87FE09338003FF049171F90C71607A2007E1803007C1801A300781800A400F819
F8481978A5C81700B3B3A20107B8FCA545437CC24E>I<B792B6FCA526003FFECAEAFC00
806D606F15016D608119036D606F15076D606F150F6D6081191F6D6D93C7FC61027F163E
6F157E023F167C8119FC6E6D5C18016E5E7013036E5E8218076E6D5C180F6E5E70131F6E
93C8FC705B037F143E82187E033F147C7013FC6F5C17816F5C17C117C36F5C17E76F5C17
FF6F5CA36F91C9FCA2705AA2705AA3705AA2705AA2705AA250457EC355>86
D<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7E
A26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC0100
0313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013E
EBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97
D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DFC03FFC9139FF000F
FE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A2177F18
F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC07FFC496CB512F0D9
F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C0010F14F0013F14FC90
397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300007F6E5AED
00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F00
6C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32
>I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF8
07FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA212FFAC
127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01F
EF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3FF80103B57E
010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D1380485A001F
ED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F
17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE
011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF80020F13E0027F13
F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03
F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC522>I<DAFFE0137E
010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001FF84848EB0FFC4848
903907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FCA26D5B000F5D6C6C
495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0000F90CAFCA47F7F
7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0C77ED83FC0140748
48020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B
07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32427DAC38>I<EB7F
C0B5FCA512037EB1ED07FE92383FFF8092B512E002C114F89139C7F03FFC9138CF801F91
39DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512FEA537457CC43E>I<137C48
B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFF
A512037EB3AFB6FCA518467CC520>I<EB7FC0B5FCA512037EB3B3B3A3B61280A519457C
C420>108 D<90277F8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001B512E00281
6E4880913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF3E007F6C01
9E6D013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003B512FEA557
2D7CAC5E>I<90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F80
1F000390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC
3E>I<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848
C7EA3FE000078248486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F17
00A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F
90C7FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<90397FC00FF8B590
B57E02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D13804A15
C04A6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E
4913806E4913006E495A9139DFC07FFC02CFB512F002C314C002C091C7FCED1FF092C9FC
ADB67EA536407DAC3E>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1F
FE000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A527
2D7DAC2E>114 D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48
C7121F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC
6C800003806C15806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA2
6C15C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FE
C7FC232F7CAD2C>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90
B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391F
FC1F006DB5FC6D13FC01015B9038003FE023407EBE2C>I<B5D8FE1FB539801FFFF0A500
019027C0003FE0C7EA7C007114786E17F86C6F6C5C6E1601017F6E6C5CA26E011F140301
3F6F5C6E013F1407011F6F5CA26E0179140F010F048090C7FC6E01F95C6D02F0EBC01E15
806D902681E07F5B18E003C3157C6D9139C03FF07815E76DDA801F5B18F803FF14F96E90
39000FFDE018FF6E486D5BA36E486D5BA26E486D90C8FCA24B7F02075DA26E48147C4B14
3C4C2C7EAB51>119 D<B500FE90383FFFF0A5C601F0903803E0006D6C495A013F4A5A6D
6C49C7FC6E5B6D6C137E6DEB807C6D6D5A6DEBC1F0EDE3E06DEBF7C06EB45A806E90C8FC
5D6E7E6E7F6E7FA24A7F4A7F8291381F3FFCEC3E1F027C7F4A6C7E49486C7F01036D7F49
487E02C08049486C7F49C76C7E013E6E7E017E141FB500E090B512FCA5362C7EAB3B>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr5 5 1
/Fb 1 50 df<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C>49
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy5 5 1
/Fc 1 1 df<B612FEA31F037A8B2D>0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmex10 10 2
/Fd 2 90 df<BF12E08AA38A6C90CCFC0900806C6D19076C6D07007F6C6D1A1F1D076C6D
F201FF6C6D747E6C6DF33F801E0F6C6D1B076D6CF303C06D6D1A01F600E06D7F6D6D1B70
6D1D30816D6D1B186D6D1B007F816E7E6E7FA26E7F6E7F6E7FA26E7F6E7F6E7FA26F7E6F
7F6F7FA26F7F6F7F81836F7F6F7F167F83707F707F8284707F707FA2707F82715A60173F
715A604D5A4DCDFC17FEA24C5A4C5A4C5A4C5A4C5A5F163F4CCEFC16FE4B5A4B5A4B5AA2
4B5A4B5A4B5A4BCFFC15FEA24A5A4A5A4A481B184A481B304A5A4B1B70023F1C604ACF12
E002FE1B014948F303C049481B074948F30F801E1F49481B7F4948F3FF0049481A0349CE
120F01FEF37FFEF403FF48481A7F4848077FB55A48BEFC48655AA248655ABFFC666D747B
7F78>88 D<BE12FEA5000302E0C9000F1480C66CF2FC00011F1AF06D626D62A26D62B3B3
B3B3B3A4496D4C7FA2496D4C7F496D4C7F017F01FF4BB512FC0003B600E0020FECFF80B8
D88003B712FEA55F747B7F6A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi5 5 1
/Fe 1 109 df<EA1FC0123F12071380A4EA0F00A4121EA45AA45AA3138012F1A3EAF300
127E123C0A1D7C9C14>108 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmsy7 7 1
/Ff 1 1 df<B712FEA327037A8F34>0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmti10 10 13
/Fg 13 123 df<14F8EB07FE90381F871C90383E03FE137CEBF801120148486C5A485A12
0FEBC001001F5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F15
831680143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901
F000F0222677A42A>97 D<ED01F815FFA3150316F0A21507A216E0A2150FA216C0A2151F
A21680A2153FA202F81300EB07FE90381F877F90383E03FF017C5BEBF80112013803F000
48485B120FEBC001121F5DEA3F801403127F01005BA214075A485CA2140FA248ECC1C0A2
141F15C3ED8380143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE
03FC3901F000F0253B77B92A>100 D<147F903803FFC090380FC1E090383F00F0017E13
785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F80397F81FF00EBFFF891
C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01E0EC03C06CEB0F806CEB
3E00380781F83803FFE0C690C7FC1D2677A426>I<EC07C0EC3FF09138FC38E0903901F0
1FF0EB03E0903807C00FEB0F80011F1307D93F0013E05B017E130F13FE4914C01201151F
1203491480A2153F1207491400A25DA249137EA215FEA25D00031301140314076C6C485A
0000131FEB787BEB3FF390380FC3F0EB00031407A25DA2140F5D121C007E131F5D00FE49
C7FC147E5C387801F8387C07E0381FFF80D803FEC8FC24367CA426>103
D<EB01C0EB07E014F0130F14E01307EB038090C7FCAB13F0EA03FCEA071EEA0E1F121CA2
12385B1270A25BEAF07E12E013FEC65AA212015B1203A25B12075BA2000F13E013C013C1
001F13C01381A2EB83801303EB0700A2130E6C5AEA07F8EA01E0143879B619>105
D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA212
03A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E0EA212FE131E
EAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B79B915>108
D<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E0
007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F
5E12034990383F8380160316070007027F130049137EA2160E000F147C49141E161C5E00
1FEC3C7849EB1FE00007C7EA0780292679A42F>110 D<147F903803FFC090380FC1F090
381F00F8017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90C7FC
A215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB
3F00147E6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007C090391FE0
3FF090393CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01
E113C15CA2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E
013F495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201
A25BA21203A25B1207B512C0A3293580A42A>I<3903C003F0390FF01FFC391E783C0F38
1C7C703A3C3EE03F8038383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5B
A2120012015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>
114 D<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC3800FC00
A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB0078147014F0
14E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>116
D<13F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270
013F131F00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349
EBFC0EA20201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F8
3C78E090393FF03FC090390FC00F00272679A42D>I<903903C0038090380FF007D91FF8
1300496C5A017F130E9038FFFE1E9038F83FFC3901F007F849C65A495B1401C7485A4A5A
4AC7FC141E5C5C5C495A495A495A49C8FC131E5B49131C5B4848133C4848133849137800
0714F8390FF801F0391FFF07E0383E1FFFD83C0F5B00785CD8700790C7FC38F003FC38E0
00F021267BA422>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmmi7 7 21
/Fh 21 118 df<1238127C12FE12FFA2127F123B1203A31206A3120C1218123812701220
08127A8614>59 D<90383FFFF8A2D901FCC7FC5CA21303A25CA21307A25CA2130FA25CA2
131FA25CA2133FA291C8FCA249141C1618137E163801FE1430167049146016E000011401
ED03C0491307ED0F800003147FB7FC160026287DA72E>76 D<D93FFC903801FFF8800101
9138001F006E141E170C902603BF80131C1718EC1FC0A2496C6C1338173090380607F0A2
90260E03F81370176090380C01FCA290261C00FE13E05F0118137FA20138EB3F81031F5B
013014C1150F017014E3030790C7FC016014F3150301E014FF6F5A5B15001201167C5B48
6C143C1207D8FFFC1418A235287DA735>78 D<000FB712E05A9039800FE007D81E009038
C001C05A0038011F1300123000705C00601501023F148012E0481400A2C74890C7FCA214
7EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131F001FB57EA22B28
7DA727>84 D<3B7FFFE003FFF0A2D803F8C7EA3E0049143C16180007153816305BA2000F
157016605BA2001F15E05E5BA2003F14015E90C7FCA248140393C7FC127EA200FE5C1506
5AA2150E150C151C5D007C5C5D6C495A003F495A261F800FC8FC3807C07C3801FFF03800
7F802C297BA72D>I<903B3FFFE00FFFC0A2010190390001FC006D4814F017C0027F495A
4CC7FC6E130E6F5A021F5B6F5A5E91380FE1C0EDE380DA07F7C8FC15FE6E5A5D6E7EA281
1403EC077F140E4A7E02187FEC301F02607F14C049486C7EEB030001066D7E5B01386D7E
5B01F06D7E485AD80FF0497ED8FFFC90381FFFE0A232287DA736>88
D<B56CEB7FF8A2D80FF0C7EA1F800007ED1E006D141C00035D5E6C6C5C4B5A6C6C495A93
C7FC017F13065D5D6D6C5A5D90381FC0E0ECC1C090380FE38002E7C8FC14E6EB07FC5C6D
5AA25C1307A35C130FA35C131FA3133F380FFFFCA22D287CA727>I<010FB612C05B9139
E0003F800280EB7F00013EC712FE013C495A0138495A49495A4B5A0160495A01E0495A49
49C7FC5D90C75A4A5A4A5A4A5A4A5A4A5A4A5A4AC8FC14FE495A495A4948133049481370
49481360133F4A13E049C75A01FE1301485A4848495A485A484813074848130F4848013F
C7FC484848B4FCB7FC5D2A287CA72D>I<EB1F80EB7FC0EBF0E73803C03FEA078048487E
A2121E003E133E123C127CA2485BA4485B1530A3903801F060A2EA7803010E13C0393C1C
F980381FF07F3907C01E001C1B7C9924>97 D<EA01F0123FA2EA03E0A21207A25BA2120F
A25BA2121F139FEB3FC0EBE0E0383FC0F0EB0078A2123E007E137CA2127CA212FC14F85A
A338F001F0A214E0130314C0EB078038700F00EA781E6C5AEA1FF0EA07C016297CA71D>
I<15F8141FA2EC01F0A21403A215E0A21407A215C0A2140FEB1F8F90387FCF80EBF0EF38
03C03FEA0780390F001F00A2001E5B123E003C133E127C147E5A147CA214FC5AECF830A3
903801F060A2EA7803010E13C0393C1CF980381FF07F3907C01E001D297CA723>100
D<EB0FC0EB7FF0EBF0383803C01CEA0780EA0F005A121E003E1338481370EB07E0387FFF
8038FFFC0000F8C7FCA45AA214040078130C141800381330003C13E0381E07C0380FFF00
EA03F8161B7C991F>I<130E131F5BA2133E131C90C7FCA7EA03E0487EEA0C78EA187C12
30A212605B12C0A2EA01F0A3485AA2485AA2EBC180EA0F81A2381F0300A213066C5A131C
EA07F06C5A11287DA617>105 D<1407EC0F80141FA21500140E91C7FCA7EB03E0EB07F8
EB0C3C1318EB303E136013C0A248485AA2C7FCA25CA4495AA4495AA4495AA4495AA21238
D87C1FC7FC12FC133E485AEA70F8EA7FE0EA1F80193380A61B>I<133EEA07FEA2EA007C
A213FCA25BA21201A25BA21203EC07809038E01FC0EC38600007EB61E014C3EBC187EBC3
07D80FC613C09038CC038001B8C7FC13E0487E13FEEB3F80EB0FC0486C7E1303003E1460
A2127EECC0C0127CECC18012FC903801E30038F800FE0070137C1B297CA723>I<137CEA
0FFCA2EA00F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA21300
A25AA2123EA2127EA2EA7C18A3EAF830A21320EA786013C0EA3F80EA0F000E297EA715>
I<3B07801FC007E03B0FE07FF01FF83B18F0E0F8783C3B30F1807CE03E903AFB007D801E
D860FEEB3F005B49133E00C14A133E5B1201A24848495BA35F4848485A1830EE01F0A23C
0F8003E003E060A218C0933801E180271F0007C013E3933800FF00000E6D48137C341B7D
993B>I<9038F007C03901FC1FF039031E78780006EBE03C90381FC01C000CEB801E1400
5B0018141F133E1200137E153E137CA213FC157C5B1578000114F0A2EC01E0EC03C03903
FC07809038FE1F00EBE7FCEBE1F0D807E0C7FCA25BA2120FA25B121FEAFFF8A220258099
22>112 D<EB1F03EB7F873801E0CF3803C07FEA0780380F003E5A121E003E137E003C13
7C127CA24813FC14F8A3EAF00114F0A3130314E0EA7007EA780FEA3C3F381FF7C0EA07C7
EA0007130F1480A3131F14005B3803FFF0A218257C991E>I<131C133EA25BA45BA4485A
B512E0A23801F000485AA4485AA4485AA448C7FC1460A214C0123EEB0180EB0300EA1E06
EA1F1CEA0FF8EA03E013267EA419>116 D<EA03E0486C1338D80C78137CEA187C00305C
A212605B00C0495AA2EA01F0A24A5AEA03E0A34848485AEDC180A391380F8300A2000313
1F9038E037863901F0E7CE3900FFC3FC90383F00F0211B7D9927>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmsy10 10 5
/Fi 5 107 df<007FB81280B912C0A26C17803204799641>0 D<121C127FEAFF80A5EA7F
00121C0909799917>I<EC01F8140FEC3F80ECFC00495A495A495AA2130F5CB3A7131F5C
133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D7E131F80130FB3A7
801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>102 D<12FCEAFFC0EA07F0EA
01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC1FF0EC07F8EC1FF0EC7E
00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA07F0EAFFC000FCC8FC1D
537ABD2A>I<126012F0B3B3B3B3A91260045377BD17>106 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr7 7 6
/Fj 6 62 df<140EB3A2B812E0A3C7000EC8FCB3A22B2B7DA333>43
D<EB3F803801FFF03803E0F83807803C48487E001E7F003E1480A2003C1307007C14C0A4
00FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F80
1B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521
>I<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC
15005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA0180390300
030012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C
0030137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC38
0001E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F
01F03807FFC0C690C7FC19277DA521>I<B812E0A3CBFCABB812E0A32B117D9633>61
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmmi10 10 28
/Fk 28 118 df<EC3FC0ECFFF8903807E07C90380F801FD93F00EB800C017E130F499038
07C01C4848ECE018485A484801031338000FEDF0305B001F16704848156017E0007F16C0
90C713F1178016F34816004815F716FE5EA2485D5EA4007E1407150F003E91381DF81800
3F14796C02E11338270F8007C013303B07E03F007CF02601FFF8EB3FC026003FC0EB0F80
2E267DA435>11 D<013FB612E090B712F05A120717E0270F807006C7FC391E00600E4814
0C003813E04813C048141CEAC0011200148001035BA213071400A25B1578011E137CA313
3E133C137C157E13FC5B1201157F1203497FA3D801C0131C2C257EA32F>25
D<121C127FEAFF80A5EA7F00121C0909798817>58 D<121C127FEAFF80A213C0A3127F12
1C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<0103B7FC4916
E018F8903B0007F80007FE4BEB00FFF03F80020FED1FC0180F4B15E0F007F0021F1503A2
4B15F81801143F19FC5DA2147FA292C8FCA25C18035CA2130119F84A1507A2130319F04A
150FA2010717E0181F4A16C0A2010FEE3F80A24AED7F00187E011F16FE4D5A4A5D4D5A01
3F4B5A4D5A4A4A5A057FC7FC017F15FEEE03FC91C7EA0FF049EC7FC0B8C8FC16FC16C03E
397DB845>68 D<0107B512FCA216F890390007F8005DA2140FA25DA2141FA25DA2143FA2
5DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA2
5CA2133FA25CA2137FA291C8FC497EB6FCA326397DB824>73 D<0103B6FC5B5E90260007
FCC8FC5D5D140FA25DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA2
1303A25CA2130718404A15C0A2010F150118804A1403A2011F16005F4A1406170E013F15
1E171C4A143C177C017F5D160391C7120F49EC7FF0B8FCA25F32397DB839>76
D<902603FFF893383FFF80496081D900079438FF80000206DC01BFC7FCA2020E4C5A1A7E
020C1606190CDA1C7E16FE4F5A02181630A20238166162023016C1F00181DA703F158395
380303F002601506A202E0ED0C076202C01518183001016D6C140F06605B028015C0A201
03923801801FDD03005B140092380FC00649173F4D91C8FC01065DA2010E4B5B4D137E13
0C6F6C5A011C17FEDCE1805B011802E3C7FCA2013802E6130104EC5C1330ED03F8017016
034C5C01F05CD807FC4C7EB500E0D9C007B512F01680150151397CB851>I<0103B7FC49
16E018F8903B0007F80007FC4BEB00FE187F020FED3F80F01FC05DA2021F16E0A25DA214
3FF03FC05DA2027FED7F80A292C8130018FE4A4A5A604AEC07F04D5A0101ED3FC04CB4C7
FC91B612FC17E0D903FCCAFCA25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA213
7FA291CBFC497EB6FCA33B397DB835>80 D<92391FE00380DBFFFC130002036D5A91390F
E01F8F91393F0007DF027EEB01FE02F81300495A4948147E177C4948143C495AA2011F15
3891C8FCA3491530A28094C7FC80806D7E14FEECFFE06D13FE6DEBFFC06D14F06D806D80
021F7F02037FEC003F03037F1500167F163F161FA3120C160FA2001C151F94C7FCA3003C
153EA25E003E5D127E007F4A5A6D495A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFF
F8010F13E0D8C00190C9FC313D7CBA33>83 D<0003B812FEA25A903AF8003FC00101C091
3880007E4848163C90C7007F141C121E001C92C7FCA2485CA200305C0070171800601301
12E0485CA21403C716005DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA292
C9FCA25CA25CA21301A25CA21303A25CEB0FFC003FB6FC5AA237397EB831>I<003FB56C
48B51280485DA226007F80C7381FF00091C8EA07C0604993C7FCA2491506A20001160E17
0C5BA20003161C17185BA20007163817305BA2000F167017605BA2001F16E05F5BA2003F
15015F5BA2007F150394C8FC90C8FCA25E4815065A160E160C161C161816385E127E5E4B
5A6C4A5A4BC9FC6C6C131E6C6C5B6C6C13F83903F807E06CB55A6C6C48CAFCEB0FF0393B
7BB839>I<49B500F890387FFFF095B5FC1AE0D90003018090380FFC004BC713E00201ED
07804EC7FC6E6C140E606F5C705B606F6C485A4D5A031F91C8FCEEE0065F6F6C5A5F0307
5B705A16F96FB45A94C9FC6F5AA36F7EA34B7FED037F9238063FC0150E4B6C7E1538ED70
0F03E07F15C04A486C7EEC0300020613034A805C4A6D7E14704A1300494880495A49C86C
7E130E011E153F017E4B7ED803FF4B7E007F01E0011FEBFFC0B5FC6144397EB845>88
D<B500FC91383FFFE0A3000390C83807FC006CEE03E06C5F4D5A95C7FC6D6C140E5F5F6D
6C14305F5F6D6C495A4CC8FC010F5C6E130E160C01075C6E5B5E6D6C5B15014B5AD901FE
90C9FC15065D6D6C5A5D15706E5A5D5D6ECAFC5CA3147E14FEA35C1301A35C1303A35C13
07A2130F000FB512F0A25D3B397DB830>I<91B712FCA25B9239E00007F84AC7EA0FF0D9
03F8EC1FE04AEC3FC04AEC7F804A150049485C91C7485A4C5A010E4A5A4C5A010C4A5A01
1C4A5A01185D167F4CC7FC90C7485A4B5A4B5A4B5A5E151F4B5A4B5A4BC8FC4A5A4A5A4A
5A5D140F4A5A4A5A4A48130C4AC7FC495A4A141C01031518495A49481438494814304948
1470495A49C812F0495D000115014848140348484A5A4848140F4848141F4848EC7F8048
48EB07FF90B7FCB8FC94C7FC36397BB839>I<147E903803FF8090390FC1C38090391F00
EFC0017E137F49133F485A4848EB1F8012075B000F143F48481400A2485A5D007F147E90
C7FCA215FE485C5AA214015D48150CA21403EDF01C16181407007C1538007E010F133000
3E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F0026267DA42C>
97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0FCEBE3FF9038
E707C0390FFE03E09038F801F001F013F8EBE000485A15FC5BA2123F90C7FCA214015A12
7EA2140312FE4814F8A2140715F05AEC0FE0A215C0EC1F80143F00781400007C137E5C38
3C01F86C485A380F07C06CB4C7FCEA01FC1E3B7CB924>I<EC3FC0903801FFF0903807E0
3C90380F800E90383F0007017E131F49137F484813FF485A485A120F4913FE001F143848
481300A2127F90C8FCA35A5AA45AA315031507007E1406150E003E143C003F14706C14E0
390F8007C03907C03F003801FFF838003FC020267DA424>I<163FED1FFFA3ED007F167E
A216FEA216FCA21501A216F8A21503A216F0A21507A2027E13E0903803FF8790380FC1CF
90381F00EF017EEB7FC049133F485A4848131F000715805B000F143F485A1600485A5D12
7F90C7127EA215FE5A485CA21401A248ECF80CA21403161CEDF0181407007C1538007E01
0F1330003E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F00283B
7DB92B>I<EC3FC0903801FFF0903807E07890381F801C90387E001E49130E485A485A12
07485A49131E001F141C153C484813F8EC03E0007FEB3FC09038FFFE0014E090C8FC5A5A
A7007E140315071506003E140E153C6C14706C6C13E0EC07C03903E03F003801FFF83800
3FC020267DA427>I<16F8ED03FEED0F8792381F0F80ED3E3F167F157CA215FC1700161C
4A48C7FCA414035DA414075DA20107B512F0A39026000FE0C7FC5DA4141F5DA4143F92C8
FCA45C147EA514FE5CA413015CA4495AA45C1307A25C121E123F387F8F80A200FF90C9FC
131E12FEEA7C3CEA7878EA1FF0EA07C0294C7CBA29>I<14E0EB03F8A21307A314F0EB01
C090C7FCAB13F8EA03FEEA070F000E1380121C121812381230EA701F1260133F00E01300
12C05BEA007EA213FE5B1201A25B12035BA20007131813E01438000F133013C01470EB80
6014E014C01381EB838038078700EA03FEEA00F815397EB71D>105
D<150FED3F80A2157FA31600151C92C7FCABEC0F80EC3FE0ECF0F0903801C0F849487E14
005B130E130C131CEB1801133801305BA2EB0003A25DA21407A25DA2140FA25DA2141FA2
5DA2143FA292C7FCA25CA2147EA214FEA25CA21301001E5B123F387F83F0A238FF87E049
5A00FE5BD87C1FC8FCEA707EEA3FF8EA0FC0214981B722>I<90390F8003F090391FE00F
FC903939F03C1F903A70F8700F80903AE0FDE007C09038C0FF80030013E0000149130301
8015F05CEA038113015CA2D800031407A25CA20107140FA24A14E0A2010F141F17C05CEE
3F80131FEE7F004A137E16FE013F5C6E485A4B5A6E485A90397F700F80DA383FC7FC9038
7E1FFCEC07E001FEC9FCA25BA21201A25BA21203A25B1207B512C0A32C3583A42A>112
D<02FC13C0903803FF0190380F838390383F01C790397E00EF8049137F485A4848133F00
0715005B485A001F5C157E485AA2007F14FE90C75AA3481301485CA31403485CA314075D
140F127C141F007E495A003E137F381F01EF380F839F3903FF1F80EA00FC1300143F92C7
FCA35C147EA314FE5C130190387FFFF0A322357DA425>I<14FF010313C090380F80F090
383E00380178131C153C4913FC0001130113E0A33903F000F06D13007F3801FFE014FC14
FF6C14806D13C0011F13E013039038003FF014071403001E1301127FA24814E0A348EB03
C012F800E0EB07800070EB0F006C133E001E13F83807FFE0000190C7FC1E267CA427>
115 D<EB01C0497E1307A4130F5CA3131F5CA3133F91C7FC007FB51280A2B6FCD8007EC7
FCA313FE5BA312015BA312035BA312075BA3120FEBC006A2140E001F130CEB801C141814
385C146014E0380F81C038078780D803FEC7FCEA00F819357EB31E>I<13F8D803FE1438
D8070F147C000E6D13FC121C1218003814011230D8701F5C12601503EAE03F00C001005B
5BD8007E1307A201FE5C5B150F1201495CA2151F120349EC80C0A2153F1681EE0180A2ED
7F0303FF130012014A5B3A00F8079F0E90397C0E0F1C90393FFC07F8903907F001F02A26
7EA430>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr10 10 61
/Fl 61 122 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313
005A1206120E5A5A5A12600A1979B917>39 D<146014E0EB01C0EB0380EB0700130E131E
5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA312
1EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E014
60135278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C13
3E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E
133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<121C12
7FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A19
798817>44 D<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C0909798817>I<
EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48487FA248C77E
A2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F
143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>
48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B7
2A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E12300070
6D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A
4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B49130348481400485A48
5A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80F
F03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5A
A24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0
A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C495A12
1E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A21578
15F8A2140114031407A2140F141F141B14331473146314C313011483EB03031307130613
0C131C131813301370136013C01201EA038013005A120E120C5A123812305A12E0B712F8
A3C73803F800AB4A7E0103B512F8A325397EB82A>I<EC3FC0903801FFF0010713FC9038
0FE03E90383F800790387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F
91C7FCA2485AA3127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F
01E0137E497FA249148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15
006C6C5B15FE6C6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>
54 D<12301238123E003FB612E0A316C05A168016000070C712060060140E5D151800E0
1438485C5D5DC712014A5A92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307
A2130FA3495AA3133FA5137FA96DC8FC131E233B7BB82A>I<121C127FEAFF80A5EA7F00
121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>58 D<007FB812F8B912FCA26C
17F8CCFCAE007FB812F8B912FCA26C17F836167B9F41>61 D<1538A3157CA315FEA34A7E
A34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707F
EC6003A202C07F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010CC712
1FA2496E7EA3496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512FE
A3373C7DBB3E>65 D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707E
A2707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0
EE07F0707E707E83707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486D
EB7FF0B812C094C7FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A
01FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE15
3F12014848151F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD
127F6DED0180A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F
15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F
13F002011380313D7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0F
F0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF
0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7
FC16F816C036397DB83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E17
0EA31706A317078316C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500
A21860A318E093C712C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FC
A333397DB839>I<B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170C
A4170E1706A2ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692
C8FCAD4813C0B612C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF803F
03903A03FC000787D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A484815
0F48481507A248481503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338
007FE0EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14
EFD90FF8EB03C7D903FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380
383D7CBA41>I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C712
01B3A6486D497EB648B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB6
12C0A31A397EB81E>I<B612E0A3000101C0C8FC6C90C9FCB3AD1718A517381730A31770
A317F0A216011603160FEE1FE0486D13FFB8FCA32D397DB834>76
D<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9
C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C1318A26E6C
1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3ED3F8CA2ED
1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED018045397DB8
4C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2
EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED7FC016E015
3FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA2
16071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA2170637397DB83E
>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE
1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF0091B512FC16F091
C9FCB3A5487FB6FCA330397DB839>80 D<D90FF813C090383FFE0190B512813903F807E3
3907E000F74848137F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C
1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480
010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216
F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8
010F13E0D8C00190C7FC253D7CBA2E>83 D<003FB812E0A3D9C003EB001F273E0001FE13
0348EE01F00078160000701770A300601730A400E01738481718A4C71600B3B0913807FF
80011FB612E0A335397DB83C>I<B500FC91387FFF80A30003018091380FFC006C90C8EA
07E0715A6C705A6E1403017F93C7FCA280013F1506A26E140E011F150C80010F5DA28001
075DA26E147001031560A26D6C5CA2806D4A5AA2ED8003027F91C8FCA291383FC006A215
E0021F5BA2EDF01C020F1318A26E6C5AA215FC02035BA2EDFEE002015BA26E6C5AA36FC9
FCA3153EA2151CA3393B7EB83E>86 D<B5D8FC07B5D8F001B5FCA30007902780001FFEC7
EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C1500A26E5F017F6E6C1406
A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C6D5BEE18
1FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338C003FCA203805D913B7F
818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0FFCEC3F
F0A302075E4B141FA202035E4B140FA202015E4B1407A2020093C8FC4B80503B7EB855>
I<B500FE91383FFFE0A3000301E0913807FE00C649EC03F0017F6F5A606D6C5D6D6C1403
95C7FC6D6C1406A26D6C5C6D6C141C17186D6C143817306D6D5B6E6C13E05F91383FE001
5F91381FF003DA0FF890C8FC1606913807FC0E160C913803FE1C913801FF185E6E13B016
E0157F6F5AB3A24B7E023FB512C0A33B397FB83E>89 D<003FB7FCA39039FC0001FE01C0
130349495A003EC7FC003C4A5A5E0038141F00784A5A12704B5A5E006014FF4A90C7FCA2
4A5A5DC712074A5AA24A5A5D143F4A5AA24A5A92C8FC5B495AA2495A5C130F4948EB0180
A2495A5C137F495A16034890C7FC5B1203485AEE0700485A495C001F5D48485C5E484849
5A49130FB8FCA329397BB833>I<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C
6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0
123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E18383FC01E3A0FE078
1FF03A03FFF00FE03A007F8007C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0
EC7FF89038F1E03E9039F3801F809039F7000FC001FEEB07E049EB03F049EB01F85BED00
FCA216FEA2167E167FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC0
9039C7801F00903881E07E903800FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090
387E03E03901F80070484813F83907E001FC380FC003A2EA1F80123F90380001F848EB00
F01500A2127E12FEAA127E127FA26C14067F001F140E6D130C000F141C6C6C13386C6C13
706C6C13E039007C07C090381FFF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F15
0FB0EB03F8EB1FFF90387E078F9038F801EF3903F0007F4848133F4848131FA24848130F
123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEF
F03A01F801CFFF39007C078F90381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90
387C0FC03901F803E03903F001F0D807E013F8380FC0004848137CA248C7127E153E5A15
3F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D
131CD801F013386C6C137090387E03E090381FFF80903803FC0020277EA525>I<147E90
3803FF8090380FC1E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3
D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C
9039F81F707C3901F00FE03903E007C03A07C003E010000FECF000A248486C7EA86C6C48
5AA200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB5
12C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF0003E140348140116F84814
00A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC3900
7FFFF0010790C7FC26387EA52A>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F90
39F1C01F809039F3800FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3
293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA
487EB512C0A312387EB717>I<EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F8
13FFA313071301B3B3A2123C127E00FF13F01303A214E038FE07C0127C383C0F00EA0FFE
EA03F8154984B719>I<EA03F012FFA3120F1203B1913801FFFCA39138007FC01600157C
15705D4A5A4A5A4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E81
14076E7E6E7E811400157E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>
I<EA03F012FFA3120F1203B3B3AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000
FFD93FFCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013
CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA3
40257EA445>I<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F700
13FE496D7EA25BA35BB3A3486C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF
8090383E03E09038F800F84848137C48487F48487F4848EB0F80001F15C090C712074815
E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D
131F6C6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>
I<3903F01FE000FFEB7FF89038F1E07E9039F3801F803A0FF7000FC0D803FEEB07E049EB
03F04914F849130116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB
0FE001F614C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328
357EA42E>I<D903F813C090381FFE0190387E07819038FC01C33903F000E30007147748
48133749133F001F141F485A150F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C
6C137F6C6C13EF3901F801CF39007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FC
A328357DA42C>I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE
9038EC03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421>I<EBFF03000313
E7380F80FF381E003F487F487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C
13F86C7F00037FC67F01071380EB007F141F00C0EB0FC01407A26C1303A37E15806C1307
7EEC0F00B4131E38F3C07C38E1FFF038C03F801A277DA521>I<1318A51338A31378A313
F8120112031207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E1300
6D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407
B3A4150FA3151F12016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03
FC07E00029267EA42E>I<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D1480
00011500A26C6C1306A26D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001
075BA2903803F180A3D901FBC7FCA214FF6D5AA2147CA31438A227257EA32C>I<B53A1F
FFE03FFEA3260FF8009038000FF86C48017EEB03E018C00003023EEB0180A26C6C013FEB
0300A36C6CEC8006156FA2017E9038EFC00C15C7A2D93F016D5A15830281EBF038D91F83
1430150102C3EBF87090260FC6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133F
A2010192C7FC4A7FA20100141E4A130E0260130C37257EA33C>I<B538807FFFA33A03FE
003FF00001EC1F80000092C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB
03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7E090380383F090380703F8EB060149
6C7E011C137E49137F01787F496D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C
>I<B538803FFEA33A0FF8000FF06C48EB07C00003EC03806C7E16007F00001406A2017E
5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2D901FBC7FCA214
FF6D5AA2147CA31438A21430A214701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0E
EA701C6C5AEA1FF0EA0FC027357EA32C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmbx12 14.4 19
/Fm 19 123 df<157815FC14031407141F14FF130F0007B5FCB6FCA2147F13F0EAF800C7
FCB3B3B3A6007FB712FEA52F4E76CD43>49 D<EC3FFE0103B512E0010F14FC013F14FF90
B712C048D9C07F7F2703FE000F13F8D807F801037FD80FE06D7F48486D7F48488001F016
80486C6E13C07F486C6E13E07FA27013F0A56C5AA26C5AEA0FF0EA03C0C914E05EA218C0
5E1880A24C13005F4C5A4B5B5F4B5B5F4B5B4B90C7FC4B5A5E4B5AED7FE04B5A4A5B4A48
C8FC4A5A5D4A48EB01F04A5AEC3F804AC7FC02FEEC03E0495A495A495A495AD91F801407
49C8FC013E150F017FB7FC90B812C05A5A5A5A5A5A5AB9FC1880A4344E79CD43>I<9138
0FFFC091B512FC0107ECFF80011F15E090263FF8077F9026FF800113FC4848C76C7ED803
F86E7E491680D807FC8048B416C080486D15E0A4805CA36C17C06C5B6C90C75AD801FC16
80C9FC4C13005FA24C5A4B5B4B5B4B13C04B5BDBFFFEC7FC91B512F816E016FCEEFF80DA
000713E0030113F89238007FFE707E7013807013C018E07013F0A218F8A27013FCA218FE
A2EA03E0EA0FF8487E487E487EB57EA318FCA25E18F891C7FC6C17F0495C6C4816E001F0
4A13C06C484A1380D80FF84A13006CB44A5A6CD9F0075BC690B612F06D5D011F15800103
02FCC7FCD9001F1380374F7ACD43>I<177C17FEA2160116031607160FA2161F163F167F
A216FF5D5DA25D5DED1FBFED3F3F153E157C15FCEC01F815F0EC03E01407EC0FC01580EC
1F005C147E147C5C1301495A495A5C495A131F49C7FC133E5B13FC485A5B485A1207485A
485A90C8FC123E127E5ABA12C0A5C96C48C7FCAF020FB712C0A53A4F7CCE43>I<932601
FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA803F0203DAE003EB
C07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901F8824949
824949824949824949824990CA7E494883A2484983485B1B7F485B481A3FA24849181FA3
485B1B0FA25AA298C8FC5CA2B5FCAE6C057FB712E0A280A36C94C7003FEBC000A36C7FA3
6C7FA27E6C7FA26C7F6C7FA26D7E6D7F6D7F6D6D5E6D7F6D01FC93B5FC6D13FF6D6C6D5C
6E01F0EC07FB020F01FEEC1FF10203903AFFF001FFE0020091B6EAC07F033FEE001F0307
03FC1307DB007F02E01301040149CAFC5B5479D26A>71 D<B8D8C003B8FCA5D8000701F8
C9001FEBE000B3AE92BAFCA503F8C9121FB3B1B8D8C003B8FCA560527CD169>I<B600FC
073FB512FE6F61A26F96B6FCA2D80007F5C00070EF01EFA202EF6DEF03CFA202E76DEF07
8FA202E36DEF0F0FA202E16D171EA302E06D173CA26F6C1778A26F6C17F0A26F6DED01E0
A26F6DED03C0A36F6DED0780A26F6DED0F00A26F6D151EA26F6D5DA3706C5DA2706C5DA2
706D495AA2706D495AA2706D495AA3706D49C7FCA2706D131EA2706D5BA2716C5BA3716C
5BA271EB81E0A271EBC3C0A271EBE780A27101FFC8FCA3715BA2715BA2725AA2725AA2D9
3FFC6F5AB74DB712FEA2725AA2725A77527CD180>77 D<BAFC19F819FF1AE086D8000701
F0C7001F13FC060113FF726C13807313C0070F13E01BF0857313F81BFCA27313FEA41BFF
A81BFEA31BFC61A21BF84F13F04F13E0614F13C04F13004E485A061F5B92B812F01AC04F
C7FC19E003F8CBFCB3AEB812C0A550527CD15C>80 D<91260FFF80130791B500F85B0107
02FF5B011FEDC03F49EDF07F9026FFFC006D5A4801E0EB0FFD4801800101B5FC4848C87E
48488149150F001F824981123F4981007F82A28412FF84A27FA26D82A27F7F6D93C7FC14
C06C13F014FF15F86CECFF8016FC6CEDFFC017F06C16FC6C16FF6C17C06C836C836D826D
82010F821303010082021F16801400030F15C0ED007F040714E01600173F050F13F08383
A200788200F882A3187FA27EA219E07EA26CEFFFC0A27F6D4B13806D17006D5D01FC4B5A
01FF4B5A02C04A5A02F8EC7FF0903B1FFFC003FFE0486C90B65AD8FC0393C7FC48C66C14
FC48010F14F048D9007F90C8FC3C5479D24B>83 D<EC7FFF0107B512F0013F14FE90B77E
48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC48826E131F83707FA36C496D7FA26C90
C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC01071487013FEBF0074913803901FFFC0048
13F0485B485B485B4890C7FC5A5BA2485AA45EA26D5C007F151D163D6C6C02797F6C6D01
F113F86C9026C003E1EBFFE06C9026F81FC014F06C90B5487EC6ED001F011F01FC010713
E0010101E090C8FC3C387CB641>97 D<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0
021F13FC91B6FC010315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F4849
143F484980485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C
7E6C6D5C6C6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F01
01ECFE0FD9003F13F8020301C049C7FC41547CD24B>100 D<913803FFC0023F13FC49B6
FC010715C04901817F903A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048
497F18C0488191C7FC4817E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F
7EA218E06CEE01F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF
00D91FFEEB03FE903A0FFFC03FF8010390B55A010015C0021F49C7FC020113F034387CB6
3D>I<137F497E000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5
FCA512017EB3B3A6B612E0A51B547BD325>105 D<EB3FF0B5FCA512017EB3B3B3B1B612
F0A51C537BD225>108 D<D93FF0EB1FFCB591B512C0030314F0030F8092391FE07FFC92
393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3
ACB6D8F807B612C0A542367BB54B>110 D<90397FE003FEB590380FFF80033F13E04B13
F09238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB3F
FC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F367CB537>114
D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81FE0130148487F4980
127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C
816C816C81C681013F1580010F15C01300020714E0EC003F030713F015010078EC007F00
F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FF
C00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635>I<143EA6147EA414
FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE
07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B0203
13802A4D7ECB34>I<001FB8FC1880A3912680007F130001FCC7B5FC01F0495B495D4949
5B495B4B5B48C75C5D4B5B5F003E4A90C7FC92B5FC4A5B5E4A5B5CC7485B5E4A5B5C4A5B
93C8FC91B5FC495B5D4949EB0F805B495B5D495B49151F4949140092C7FC495A485E485B
5C485E485B4A5C48495B4815074849495A91C712FFB8FCA37E31357CB43C>122
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmr12 12 23
/Fn 23 121 df<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F48
48EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815
FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D
130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131
>48 D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA320
4278C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA
7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C48
13076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D
4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A48481438
48C81230000E1570001FB612F0A25A5AB712E0A326427BC131>I<121EEA7F80A2EAFFC0
A4EA7F80A2EA1E00C7FCB3A5121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A2B78AA1B>58
D<16C04B7EA34B7EA34B7EA34B7EA3ED19FEA3ED30FFA203707FED607FA203E07FEDC03F
A2020180ED801FA2DA03007F160FA20206801607A24A6D7EA34A6D7EA34A6D7EA2027081
0260147FA202E08191B7FCA249820280C7121FA249C87F170FA20106821707A2496F7EA3
496F7EA3496F7EA201788313F8486C83D80FFF03037FB500E0027FEBFFC0A342477DC649
>65 D<B8FC17F017FC00019039C00007FF6C499038007FC0017FED1FE0EF07F0EF03FC71
7E717E84727E727E727EA2727E85180385A2180185A38584A31A80AD1A00A36061A36118
0361180761180F614E5A183F614EC7FC18FEEF03FC4D5AEF1FE001FFED7FC0486DD907FF
C8FCB812FC17F094C9FC41447CC34B>68 D<B612F8A3000101E0C9FC6C6C5A5CB3B31830
A418701860A518E0A3EF01C0A217031707A2170F173F177FEE01FF48486C011F1380B9FC
A334447CC33D>76 D<B56C933807FFFC6E5EA20001F1FE0026006FE0EE1BF8A3D967F016
33A2D963F81663A3D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406A36E6C140C
A26E6C1418A36E6C1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB0300A292383F
8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13F0A2486C14
3ED80FFFEF0FFEB500F0011C0107B512FCA34E447BC359>I<EB07FC90383FFF809038F8
0FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA0380
C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B1760
48C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E03FF
802701FFFC0113003A001FE0007C2B2E7CAC31>97 D<EA01FC12FFA3120712031201B3EC
03FC91380FFF8091383C07E091387001F89039FDE0007E02807F01FFEC1F8091C713C049
EC0FE049140717F0A2EE03F8A217FCA2160117FEAB17FC1603A217F8A2EE07F0A26DEC0F
E017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B9039E0F001F89039C03C07E0903980
1FFF80C7D803FCC7FC2F467DC436>I<EC7F80903803FFF090380FC07C90383F000F01FC
EB03804848EB01C00003140F4848EB1FE049133F120F485AA2485AED1FC0007FEC070092
C7FCA290C9FC5AAB7E7FA2123F16307F001F15706C6C146016E06C6C14C06C6C13010001
EC03806C6CEB0700013F131E90381FC078903807FFF001001380242E7DAC2B>I<167FED
3FFFA315018182B3EC7F80903803FFF090380FC07C90383F000E017E1307496D5AD803F8
7F48487F5B000F81485AA2485AA2127FA290C8FC5AAB7E7FA2123FA26C7EA2000F5D7F6C
6C5B00035C6C6C9038077F806C6C010E13C0013F011C13FE90380FC0F8903803FFE09026
007F0013002F467DC436>I<EB01FE903807FFC090381F03F090387E00FC49137E48487F
485A4848EB1F80000F15C049130F121F484814E01507A2007F15F090C7FCA25AA390B6FC
A290C9FCA67EA27FA2123F16306C7E1670000F15606D14E06C6C14C0000314016C6CEB03
806C6CEB0700013E131E90381F80F8903803FFE0010090C7FC242E7DAC2B>I<EA01E0EA
07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA3120712031201B3B0487EB512F8A315
437DC21C>105 D<EA01FC12FFA3120712031201B3B3B3A5487EB512F8A315457DC41C>
108 D<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03F801E07F913C3C01FC07803F
800007903C7000FE0E001FC0000349D97E1C130F2601FDC0D97F38804A143001FFDA3FF0
6D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB50003B512E0A34B2C7DAB52>
I<3901FC01FE00FF903807FFC091381E07F091383801F8000701707F0003EBE0002601FD
C07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB36>I<EC
7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D7E00
0F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600A200
1F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0
FE903807FFF89038007F802A2E7DAC31>I<3903F803F000FFEB1FFCEC3C3EEC707F0007
EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3202C7D
AB26>114 D<90383FE0183901FFFC383907E01F78390F0003F8001E1301481300007C14
78127800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14C06C
14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C6C14
7C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26>I<
1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4150C
AA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC09038007F00
1E3E7EBC26>I<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA21200
6D5B017E9038077F80017F010E13C06D011C13FE90380FC078903803FFF09026007F8013
002F2D7DAB36>I<B539F007FFFCA30003D9C00113C0C6496C1300017F14FC013F5C6E13
E06D7E010F495A6D6C485A02F890C7FC903803FC060101130E6E5A903800FF186E5AEC3F
F05D141F140F6E7E81140FEC0DFCEC19FEEC38FF4A7E9138603F8002C07F0101131F4948
6C7E02007F01066D7E010E1303496D7E013C80017C80D801FC1580D80FFE4913C0B5D880
0F13FFA3302B7FAA33>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmr17 17.28 16
/Fo 16 123 df<DDFFF015C0040F01FF1401047F14E00303B600F81303030F9038E003FE
DB3FFCC7007F1307DBFFE0EC0FC002030180913803E00F4A48C83801F01F4A48ED0078DA
3FF0EE3C3F4A48161E4A48EE0F7F4949EE07FF4990CA7E495A4948834948835C013F197F
4948183F495A1B1F485B1B0F4890CCFCA248481907A2485A1B03121F5BA2123F1B015BA2
127F98C8FCA35B12FFB06C7EA24EB712E0A3123F95C7000FEBF0006D06015B64001F857F
A2120F7F1207A26C7EA26C7FA26C7FA26D7E6D7E131F806D7E6D6C5F6D7E6D6D5E6D7F6E
6CEE07BFDA3FF8EE0F3FDA0FFCEE1F1F6EB4163E6E01C0EDFC0F020001F0913801F807DB
3FFEEC0FE092260FFFF09038FF8003030390B538FE0001DB007F02F81300040F02C091C7
FC040001F8CAFC5B667AE368>71 D<B7020FB612F0A4C691C9000FEBF000D93FFC040313
C06D48705BB3B3A391BAFCA402F8C91201B3B3A7496C4C7F90B5040F13F0B7020FB612F0
A4546279E163>I<B500FC071FB51280A36E61C6F58000013F51C7FCD91DFFF177FCA201
1C6D18E7A36E6CEF01C7A36E6CEF0387A36E6CEF0707A26E6C170EA36E6C171CA36E6C17
38A36E6C1770A26E6D16E0A36F6CED01C0A36F6CED0380A36F6CED0700A26F6C150EA36F
6C5DA36F6C5DA36F6C5DA26F6D5CA3706C495AA3706C495AA3706C49C7FCA2706C130EA3
706C5BA3706C5BA3706C5BA3706D5AA294387FC1C0A394383FE380A3DD1FF7C8FCA3EF0F
FEA2013E6F5AA2137F715A2601FFC04F7E000701F896383FFF80B66C6D48023FB61280A3
715A696278E17A>77 D<B912C018FEF0FFC019F0C601FCC813FCD93FF8ED0FFF011F0403
7F06007FF13FF0737E737E1907737E86731380A27313C0A31BE01A7FA21BF0A91BE0A21A
FF1BC0A34F13801B00614F5A624F5A4F5AF17FE04F5A060390C7FCF01FFE943801FFF891
B812E096C8FC18F802F8CCFCB3B3A4497E90B5FCB7FCA44C6279E15A>80
D<EC3FF0903803FFFE010F6D7E90393FC03FE090397E0007F801F86D7ED801E06D7E4848
6D7E48486E7E48C86C7E7F01F06E7E487E6D6E7EA3707EA36C5AEA03E0C9FCA6167FED7F
FF020FB5FC91387FF807903801FF80903807FC00EB1FF0EB7FC0495AD803FEC7FC485A12
0F5B485A485AA2484817E0A312FF5BA2160FA3161F6D141B007F153B16736D913971FC01
C06C6C14E1001FEC01C1D80FFC903A0780FE03806C6C903A0F00FF07002701FF807E6DB4
FC27007FFFF86D5A011F01E0EB1FF8010190C7EA07E03B417ABF42>97
D<181EEF3FFEEE07FFA4EE000F1703A21701B3AAEDFF80020F13F8023F13FE9139FF803F
81903A03FC0007C14948EB01E1D91FE0EB00F94948147D4948143D49C8121F4848150F49
1507120348481503491501120F121F5BA2123F5B127FA45B12FFAD127F7FA3123FA27F12
1FA26C6C1503A26C6C150712036D150F6C6C151F0000163D137F6D6CECF9FF6D6CEB01F1
D90FF0D903C113C06D6CD90F81EBFF80D901FFEB7F019039007FFFFC021F13E002010100
91C7FC41657CE349>100 D<EC03FE91381FFFE091B512F8903901FE03FE903A07F0007F
8049486D7ED93FC06D7E49C76C7E496E7E49140348488148481401000782491400000F82
83485A1880123F49153FA2007F17C0A35BA212FF90B8FCA30180CAFCA9127F7FA3123FA2
7F121FEF01C06C7E17036C6C1680A26C6C15070001EE0F006D150E6C6C151E6D6C5C6D6C
5C6D6C5CD907F0EB03E0D903FC495A902700FF803FC7FC91383FFFFC020F13F002011380
32417CBF3A>I<133C13FF487F487FA66C5B6C90C7FC133C90C8FCB3A2EB03C0EA07FF12
7FA41201EA007FA2133FB3B3AC497E497EB612E0A41B5F7DDE23>105
D<EB03C0EA07FFB5FCA41201EA007FA2133FB3AB0403B512F8A40400148094387FFC0018
E06095C7FC177E5F17F04C5A4C5A4C5A4CC8FC163E5E5E4B5A4B5A4B5A4B5A151F4B7E4B
7E15FF02C17F9138C3CFF8ECC7879138CF07FC9138FE03FEECFC0102F87F4A6C7F4A137F
4A80707E161F83707E160783707E160183707F177F84717E171F84717E84A284496CEDFF
80496C4A13E0B600F090B6FCA440647CE346>107 D<EB03C0EA07FFB5FCA41201EA007F
A2133FB3B3B3B3AD497E497EB612F0A41C647DE323>I<D903C0EB7FE0D807FF903803FF
FCB5010F13FFDB3F0013C00378EB1FE04B6D7E0001D9C1C06D7E27007FC3808002C7C712
03D93FCE81170114DC14D802F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B612
C0A4423F7DBE49>110 D<EDFF80020F13F8023F13FE9139FF007F80D903FCEB1FE0D907
F0EB07F0D90FC0EB01F8D93F80EB00FE49C8127F017E81496F7E48486F7E000383491507
00078348486F7EA2001F83491501A2003F83A348486F7EA400FF1880AC007F1800A26D5D
A2003F5FA36C6C4B5AA36C6C4B5A00075FA26C6C4B5A6C6C4B5AA26C6C4B5A017F4BC7FC
6D6C14FE6D6C495AD90FF0EB07F8D903FCEB1FE0D900FFEB7F806EB5C8FC020F13F80201
13C039417CBF42>I<9039078003F8D807FFEB0FFFB5013F13C092387C0FE0913881F01F
9238E03FF00001EB838039007F8700148FEB3F8E029CEB1FE0EE0FC00298EB030002B890
C7FCA214B014F0A25CA55CB3B0497EEBFFF8B612FCA42C3F7CBE33>114
D<9139FFE00180010FEBFC03017FEBFF073A01FF001FCFD803F8EB03EFD807E0EB01FF48
487F4848147F48C8123F003E151F007E150F127CA200FC1507A316037EA27E7F6C7E6D91
C7FC13F8EA3FFE381FFFF06CEBFF806C14F86C14FF6C15C06C6C14F0011F80010714FED9
007F7F02031480DA003F13C01503030013E0167F00E0ED1FF0160F17F86C15071603A36C
1501A37EA26C16F016037E17E06D14076DEC0FC06D1580D8FDF0141FD8F8F8EC7F00013E
14FC3AF01FC00FF80107B512E0D8E001148027C0003FF8C7FC2D417DBF34>I<B66C49B5
12E0A4000101F8C8387FFE0026007FE0ED1FF819E0013F705A61131F6E93C7FC130F180E
6E151E0107161C8001035EA26E157801011670806D5EA26F1301027F5DA26E6C495AA26F
1307021F92C8FCA26E6C130EA26F131E0207141CA26F133C020314388102015CA26F13F0
6E5C168092387F81C0A216C3033F5B16E3DB1FE7C9FCA216FF6F5AA26F5AA36F5AA26F5A
A36F5A433F7FBD46>118 D<001FB81280A391C70001130001F85C01E05D01804A5A160F
90C8485A001E5E4C5A48157F5F4C5A5D94C7FC00384A5A15074B5A5E4B5A153F5EC8485A
15FF5E4A90C8FC5C5D4A5A140F4A5A5D4A5A147F5D4A48EB03805B92C7FC495A13075C49
48EC0700131F495A5C495A13FF4A5C4890C8FC5A495D485A000F5E48485D4915FE484814
01007F150749147FB8FCA3313E7DBD3A>122 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 658 739 a Fo(Generalized)46 b(P)l(air)f(Hidden)g(Mark)l(o)l(v)e
(Mo)t(dels)1139 980 y Fn(Lecturer:)i(Marina)31 b(Alexandersson)1440
1175 y(10)i(Decem)m(b)s(er)f(2002)330 1513 y Fm(1)135
b(Standard)44 b(HMMs)330 1695 y Fl(Let)25 b Fk(X)545
1707 y Fj(1)582 1695 y Fk(;)14 b(X)688 1707 y Fj(2)725
1695 y Fk(;)g(X)831 1707 y Fj(3)868 1695 y Fk(;)g(:)g(:)g(:)25
b Fl(denote)g(a)f(hidden)i(Mark)n(o)n(v)c(mo)r(del)k(assuming)e(v)-5
b(alues)24 b(in)h(a)g(state)g(space)330 1794 y Fk(S)37
b Fl(=)32 b Fi(f)p Fk(s)596 1806 y Fj(1)632 1794 y Fk(;)14
b(s)708 1806 y Fj(2)745 1794 y Fk(;)g(:)g(:)g(:)g(;)g(s)969
1806 y Fh(N)1032 1794 y Fi(g)p Fl(.)52 b(The)34 b(\014rst)e(state)h(is)
g(c)n(hose)f(according)f(to)i(the)h(initial)f(distribution)330
1894 y Fk(\031)26 b Fl(=)d Fi(f)p Fk(\031)580 1906 y
Fj(1)617 1894 y Fk(;)14 b(:)g(:)g(:)g(;)g(\031)849 1906
y Fh(N)912 1894 y Fi(g)27 b Fl(and)g(the)h(transition)f(probabilities)g
(are)1315 2060 y Fk(a)1359 2072 y Fh(ij)1441 2060 y Fl(=)c(Pr)o(\()p
Fk(X)1719 2072 y Fh(t)p Fj(+1)1855 2060 y Fl(=)g Fk(j)28
b Fi(j)c Fk(X)2121 2072 y Fh(t)2173 2060 y Fl(=)f Fk(i)p
Fl(\))p Fk(:)330 2226 y Fl(Let)28 b Fk(Y)527 2238 y Fj(1)564
2226 y Fk(;)14 b(Y)649 2238 y Fj(2)686 2226 y Fk(;)g(:)g(:)g(:)28
b Fl(b)r(e)f(the)h(observ)n(ed)e(pro)r(cess)g(generating)g(output)i
(dep)r(ending)g(on)f(the)h(curren)n(t)330 2326 y(state)867
2425 y Fk(b)903 2437 y Fh(j)937 2425 y Fl(\()p Fk(Y)1017
2437 y Fh(t)p Fj(+1)1155 2425 y Fi(j)23 b Fk(Y)1249 2437
y Fj(1)1287 2425 y Fk(;)14 b(:)g(:)g(:)g(;)g(Y)1520 2437
y Fh(t)1549 2425 y Fl(\))23 b(=)g(Pr)o(\()p Fk(Y)1861
2437 y Fh(t)p Fj(+1)1998 2425 y Fi(j)h Fk(Y)2093 2437
y Fj(1)2130 2425 y Fk(;)14 b(:)g(:)g(:)g(;)g(Y)2363 2437
y Fh(t)2392 2425 y Fk(;)g(X)2498 2437 y Fh(t)p Fj(+1)2634
2425 y Fl(=)23 b Fk(j)5 b Fl(\))330 2565 y(Note)27 b(no)n(w)g(ho)n(w)f
(the)h(output)h Fk(Y)1337 2577 y Fh(t)p Fj(+1)1478 2565
y Fl(can)e(dep)r(end)i(on)f(the)g(en)n(tire)g(previous)f(pro)r(cess,)g
(and)h(not)330 2664 y(just)32 b(the)g(state)f(or)g(just)h(the)g
(previous)e(output.)49 b(Hence)32 b Fk(Y)50 b Fl(do)r(esn't)32
b(ha)n(v)n(e)e(to)h(b)r(e)h(a)f(Mark)n(o)n(v)330 2764
y(pro)r(cess)d(\(that)h(is,)h Fk(Y)47 b Fl(do)r(esn't)29
b(ha)n(v)n(e)f(to)h(ful\014ll)h(the)f(Mark)n(o)n(v)e(prop)r(ert)n(y)h
(that)h(next)g(step)g(only)330 2863 y(dep)r(ends)f(on)f(the)h(curren)n
(t\).)330 3063 y(A)37 b(standard)f(HMM)h(generates)e
Fg(one)i Fl(output)g(p)r(er)g(state,)i(and)d(sev)n(eral)f(outputs)i(in)
g(a)f(ro)n(w)330 3162 y(from)27 b(the)g(same)g(state)g(is)g(done)g(b)n
(y)f(doing)h(self-transitions)f(in)n(to)h(that)g(state.)37
b(The)27 b(length)g(of)330 3262 y(the)i(output)h(generated)d(from)i
(the)g(same)g(state)f(\(1)h(or)f(more)g(dep)r(ending)i(on)e(the)h(n)n
(um)n(b)r(er)g(of)330 3362 y(self-transitions\))e(is)g(called)g(the)h
Fg(dur)l(ation)g Fl(of)g(that)g(state.)330 3633 y Fm(2)135
b(Generalized)46 b(HMMs)330 3815 y Fl(In)28 b(a)f(standard)f(HMM)j(the)
e(duration)g(is)h(geometrically)e(distributed,)i(meaning)f(that)h(if)g
Fk(p)22 b Fl(=)330 3915 y(Pr)o(\(self-transition\),)27
b(1)18 b Fi(\000)g Fk(p)23 b Fl(=)g(Pr)o(\(lea)n(ving\))k(then)1235
4081 y(Pr)o(\(duration)c(=)f Fk(L)p Fl(\))h(=)g Fk(p)2018
4046 y Fh(L)p Ff(\000)p Fj(1)2152 4081 y Fl(\(1)c Fi(\000)f
Fk(p)p Fl(\))p Fk(:)330 4246 y Fl(But)24 b(since)f(exon)f(lengths)h
(are)g(not)g(geometrically)f(distributed)h(w)n(e)g(use)g(a)g
Fg(gener)l(alize)l(d)i Fl(length)330 4346 y(distribution,)g(commonly)e
(deriv)n(ed)h(from)g(data.)35 b(Then,)25 b(if)f(the)h(Mark)n(o)n(v)d(c)
n(hain)h(is)h(in)h(state)f Fk(X)3305 4358 y Fh(l)330
4446 y Fl(w)n(e)j(c)n(ho)r(ose)g(its)g(duration)g Fk(d)1211
4458 y Fh(l)1265 4446 y Fl(from)g(distribution)h Fk(f)1955
4458 y Fh(X)2009 4467 y Fe(l)2037 4446 y Fl(\()p Fk(d)2112
4458 y Fh(l)2138 4446 y Fl(\).)330 4645 y(Before,)f(the)h(indexes)f(in)
h(the)g(hidden)g(pro)r(cess)e(and)i(the)g(observ)n(ed)e(pro)r(cess)g(w)
n(ere)h(the)h(same.)380 4857 y Fk(X)449 4869 y Fj(1)585
4857 y Fk(X)654 4869 y Fj(2)791 4857 y Fk(:)14 b(:)g(:)100
b(X)1057 4869 y Fh(L)421 4957 y Fi(j)183 b(j)385 b(j)390
5057 y Fk(Y)438 5069 y Fj(1)596 5057 y Fk(Y)644 5069
y Fj(2)791 5057 y Fk(:)14 b(:)g(:)110 b(Y)1046 5069 y
Fh(L)330 5270 y Fl(No)n(w)27 b(this)h(is)f(not)h(going)e(to)i(b)r(e)g
(true)f(an)n(ymore)380 5483 y Fk(X)449 5495 y Fj(1)773
5483 y Fk(X)842 5495 y Fj(2)1392 5483 y Fk(X)1461 5495
y Fj(3)1823 5483 y Fl(.)13 b(.)h(.)421 5582 y Fi(j)371
b(j)595 b(j)390 5682 y Fk(Y)438 5694 y Fj(1)585 5682
y Fk(Y)633 5694 y Fj(2)671 5682 y Fk(;)14 b(Y)756 5694
y Fj(3)793 5682 y Fk(;)g(:)g(:)g(:)g(;)g(Y)1026 5694
y Fh(k)1166 5682 y Fk(Y)1214 5694 y Fh(k)q Fj(+1)1340
5682 y Fk(;)g(:)g(:)g(:)f(;)h(Y)1572 5694 y Fh(k)q Fj(+)p
Fh(m)1829 5682 y Fk(:)g(:)g(:)1809 5919 y Fl(1)p eop
%%Page: 2 2
2 1 bop 330 390 a Fl(So)27 b(w)n(e)h(in)n(tro)r(duce)f(partial)g(sums)
1445 650 y Fk(p)1487 662 y Fh(l)1535 650 y Fl(=)1672
546 y Fh(l)1623 571 y Fd(X)1623 750 y Fh(k)q Fj(=1)1757
650 y Fk(d)1800 662 y Fh(k)1841 650 y Fk(;)97 b(p)2003
662 y Fj(0)2063 650 y Fl(=)23 b(0)p Fk(:)330 915 y Fl(After)34
b(the)h(duration)e Fk(d)1089 927 y Fh(l)1149 915 y Fl(is)h(selected)g
(in)g(state)g Fk(X)1937 927 y Fh(l)1996 915 y Fl(w)n(e)g(output)h
Fk(d)2447 927 y Fh(l)2506 915 y Fl(bases)e Fk(Y)2797
875 y Fh(p)2831 884 y Fe(l)2778 937 y Fh(p)2812 946 y
Fe(l)p Fc(\000)p Fb(1)2910 937 y Fj(+1)3033 915 y Fl(\(use)h(the)330
1031 y(con)n(v)n(en)n(tion)26 b(that)i Fk(Y)992 1001
y Fh(b)973 1052 y(a)1048 1031 y Fl(=)23 b Fk(Y)1184 1043
y Fh(a)1224 1031 y Fk(;)14 b(:)g(:)g(:)g(;)g(Y)1457 1043
y Fh(b)1518 1031 y Fl(according)26 b(to)h(output)h(distribution)1454
1214 y Fk(b)1490 1226 y Fh(X)5 b Ff(\000)p Fh(l)1625
1214 y Fl(\()p Fk(Y)1724 1174 y Fh(p)1758 1183 y Fe(l)1705
1236 y Fh(p)1739 1245 y Fe(l)p Fc(\000)p Fb(1)1838 1236
y Fj(+1)1926 1214 y Fi(j)p Fk(Y)2015 1169 y Fh(p)2049
1178 y Fe(l)p Fc(\000)p Fb(1)1997 1236 y Fj(1)2151 1214
y Fl(\))p Fk(:)330 1396 y Fl(Assume)30 b(that)h(w)n(e)f(observ)n(e)f(a)
h(sequence)g(of)g(outputs)h Fk(Y)2119 1408 y Fj(1)2156
1396 y Fk(;)14 b(:)g(:)g(:)g(;)g(Y)2389 1408 y Fh(T)2472
1396 y Fl(from)30 b(a)g(sequence)g(of)g(hid-)330 1496
y(den)25 b(states)f Fk(X)786 1508 y Fj(1)823 1496 y Fk(;)14
b(:)g(:)g(:)g(;)g(X)1077 1508 y Fh(L)1151 1496 y Fl(with)25
b(durations)f Fk(d)1747 1508 y Fj(1)1784 1496 y Fk(;)14
b(:)g(:)g(:)g(;)g(d)2012 1508 y Fh(L)2061 1496 y Fl(.)36
b(In)25 b(practice)f(w)n(e)g(only)g(observ)n(e)f(the)i
Fk(Y)330 1596 y Fl(sequence.)36 b Fk(X)782 1566 y Fh(L)775
1616 y Fj(1)859 1596 y Fl(and)27 b Fk(d)1063 1566 y Fh(L)1063
1616 y Fj(1)1141 1596 y Fl(are)g(hidden)h(from)f(us.)330
1795 y(The)h(join)n(t)f(probabilit)n(y)g(of)g(the)h(observ)n(ed)e(and)i
(the)g(hidden)g(data)f(b)r(ecomes)602 1978 y(Pr)o(\()p
Fk(Y)790 1943 y Fh(T)771 1998 y Fj(1)842 1978 y Fk(;)14
b(X)955 1943 y Fh(L)948 1998 y Fj(1)1004 1978 y Fk(;)g(d)1084
1943 y Fh(L)1084 1998 y Fj(1)1134 1978 y Fl(\))23 b(=)685
2183 y(=)82 b Fk(\031)879 2195 y Fh(X)933 2203 y Fb(1)994
2183 y Fk(f)1035 2195 y Fh(X)1089 2203 y Fb(1)1126 2183
y Fl(\()p Fk(d)1201 2195 y Fj(1)1239 2183 y Fl(\))24
b Fk(b)1331 2195 y Fh(X)1385 2203 y Fb(1)1421 2183 y
Fl(\()p Fk(Y)1520 2143 y Fh(p)1554 2151 y Fb(1)1501 2206
y Fj(1)1591 2183 y Fl(\))1667 2080 y Fh(L)1637 2105 y
Fd(Y)1637 2283 y Fh(l)p Fj(=2)1757 2183 y Fk(a)1801 2195
y Fh(X)1855 2204 y Fe(l)p Fc(\000)p Fb(1)1953 2195 y
Fh(;X)2027 2204 y Fe(l)2079 2183 y Fk(f)2120 2195 y Fh(X)2174
2204 y Fe(l)2202 2183 y Fl(\()p Fk(d)2277 2195 y Fh(l)2303
2183 y Fl(\))g Fk(b)2395 2195 y Fh(X)2449 2204 y Fe(l)2477
2183 y Fl(\()p Fk(Y)2576 2143 y Fh(p)2610 2152 y Fe(l)2557
2206 y Fh(p)2591 2215 y Fe(l)p Fc(\000)p Fb(1)2689 2206
y Fj(+1)2777 2183 y Fi(j)p Fk(Y)2867 2139 y Fh(p)2901
2148 y Fe(l)p Fc(\000)p Fb(1)2848 2206 y Fj(1)3003 2183
y Fl(\))p Fk(:)330 2508 y Fm(3)135 b(P)l(air)45 b(HMMs)330
2690 y Fl(A)28 b(pair)f(HMM)h(has)f(three)g(states:)380
2902 y(M)100 b(=)f(matc)n(h)27 b(\(or)g(mismatc)n(h\))380
3002 y(I)146 b(=)99 b(insertion)27 b(\(in)h(sequence)f(1\))380
3101 y(D)113 b(=)99 b(deletion)27 b(\(insertion)h(in)g(sequence)f(2\))
1594 3501 y
 tx@Dict begin tx@NodeDict begin {17.07182 2 div 8.23334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 1.0 add} false /N@M 11 {InitCnode
} NewNode end end
 1594 3501 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0. setgray  17.07182 2 div 8.23334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial
17 w Fa(M)1358 3974 y
 tx@Dict begin tx@NodeDict begin {17.07182 2 div 8.23334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 1.0 add} false /N@Ins 11 {InitCnode
} NewNode end end
 1358 3974 a @beginspecial @setspecial
 tx@Dict begin STP newpath 1.0 SLW 0. setgray  17.07182 2 div 8.23334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
end


@endspecial 50 w Fa(I)1830 3974 y
 tx@Dict begin tx@NodeDict begin {17.07182 2 div 8.23334 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add 1.0 add} false /N@D 11 {InitCnode
} NewNode end end
 1830 3974 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 1.0 SLW 0. setgray  17.07182 2 div 8.23334
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 1.0 SLW 0. setgray 0 setlinecap stroke  grestore
end
 
@endspecial 28 w Fa(D)1594 4176 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@M /N@Ins InitNC { yB yA sub xB xA sub Atan dup 8.  add /AngleA
ED 8.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1594 4176
a 1594 4176 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@Ins /N@M InitNC { yB yA sub xB xA sub Atan dup 7.  add /AngleA
ED 7.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1594 4176 a 1594 4176 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@M /N@D InitNC { yB yA sub xB xA sub Atan dup 8.  add /AngleA
ED 8.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1594 4176 a 1594
4176 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@D /N@M InitNC { yB yA sub xB xA sub Atan dup 7.  add /AngleA
ED 7.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1594 4176 a 1594 4176 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@D /N@Ins InitNC { yB yA sub xB xA sub Atan dup 8.  add /AngleA
ED 8.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1594 4176 a 1594 4176
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@Ins /N@D InitNC { yB yA sub xB xA sub Atan dup 7.  add /AngleA
ED 7.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave 0.8
SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 1594 4176 a 1594 4176 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@Ins /N@Ins InitNC { tx@Dict begin /Lineto /lineto load def false
pop end /AngleA 260. def /AngleB 280. def /ArmA 10.0 def /ArmB 10.0
def /ArmTypeA 0 def /ArmTypeB 0 def /loopsize 0.0 def NCLoop  } if
end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1594 4176 a 1594 4176 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@D /N@D InitNC { tx@Dict begin /Lineto /lineto load def false
pop end /AngleA 260. def /AngleB 280. def /ArmA 10.0 def /ArmB 10.0
def /ArmTypeA 0 def /ArmTypeB 0 def /loopsize 0.0 def NCLoop  } if
end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1594
4176 a 1594 4176 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@M /N@M InitNC { tx@Dict begin /Lineto /lineto load def false
pop end /AngleA 80. def /AngleB 100. def /ArmA 10.0 def /ArmB 10.0
def /ArmTypeA 0 def /ArmTypeB 0 def /loopsize 0.0 def NCLoop  } if
end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore
end
 1594 4176 a 330 4341 a Fl(The)h(PHMM)f(generates)f
(a)i(pair)e(of)i(sequences)f(and)g(their)h(alignmen)n(t.)387
4554 y(A)115 b(T)107 b(C)e(G)123 b(-)136 b(-)122 b(G)387
4653 y(A)115 b(C)123 b(-)e(G)107 b(T)c(C)109 b(A)p 330
4686 1189 4 v 380 4756 a(M)100 b(M)114 b(I)h(M)100 b(D)g(D)g(M)330
4970 y(But)28 b(what)f(w)n(e)h(see)f(are)f(just)j(the)f(sequences)459
5153 y(A)-7 b(TCGG)459 5252 y(A)n(CGTCA)330 5435 y(The)33
b(basic)g(mec)n(hanism)f(of)h(a)g(PHMM)g(is)g(the)h(same)e(as)h(for)f
(a)h(standard)f(HMM,)i(with)g(the)330 5535 y(exception)28
b(that)g(no)n(w)f(a)g Fg(p)l(air)i Fl(of)f(sym)n(b)r(ols)f(is)h
(generated)e(in)i(eac)n(h)f(step)h(and)g(the)g(state)g(space)330
5634 y(is)f Fk(S)h Fl(=)23 b Fi(f)p Fk(M)t(;)14 b(I)7
b(;)14 b(D)r Fi(g)p Fl(.)1809 5919 y(2)p eop
%%Page: 3 3
3 2 bop 330 390 a Fm(4)135 b(Generalized)46 b(P)l(air)f(HMMs)330
572 y Fl(The)26 b(idea)g(is)h(that)f(through)g(ev)n(olution)f(imp)r
(ortan)n(t)h(regions)f(in)i(the)f(genome)g(has)g(sta)n(y)n(ed)f(the)330
672 y(same)k(and)h(are)f(th)n(us)h(conserv)n(ed)e(b)r(et)n(w)n(een)i
(related)g(organisms.)42 b(Besides)29 b(from)h(lo)r(oking)f(for)330
771 y(subsequences)i(that)i(lo)r(ok)e(lik)n(e)h(exons)f(in)i(the)f(w)n
(a)n(y)f(Genscan)h(do)r(es,)h(w)n(e)f(will)g(also)f(tak)n(e)h(the)330
871 y(alignmen)n(t)27 b(b)r(et)n(w)n(een)h(the)g(t)n(w)n(o)e(sequences)
h(in)n(to)h(accoun)n(t.)330 1070 y(W)-7 b(e)30 b(can)g(use)g(the)g
(same)g(state)f(space)h(as)f(b)r(efore)h(but)g(the)h(output)f(is)g
(di\013eren)n(t.)44 b(Eac)n(h)29 b(state)330 1170 y(outputs)37
b(pairs)g(of)g(sequences.)65 b(Th)n(us)37 b(in)g(an)g(exon)f(state)h(a)
g(pair)g(of)g(durations)f Fk(d)3055 1182 y Fh(l)3081
1170 y Fk(;)14 b(e)3157 1182 y Fh(l)3219 1170 y Fl(are)330
1269 y(c)n(hosen)27 b(b)r(efore)g(the)h(exon)f(pair)g(\(of)h(lengths)f
Fk(d)1811 1281 y Fh(l)1837 1269 y Fk(;)14 b(e)1913 1281
y Fh(l)1938 1269 y Fl(\))28 b(is)f(generated.)330 1469
y(W)-7 b(e)23 b(still)g(ha)n(v)n(e)f(the)h(sequence)f(of)h(hidden)g
(states)f Fk(X)1946 1481 y Fj(1)1983 1469 y Fk(;)14 b(X)2089
1481 y Fj(2)2126 1469 y Fk(;)g(:)g(:)g(:)g(;)g(X)2380
1481 y Fh(L)2452 1469 y Fl(and)22 b(the)h(output)h(sequence)330
1568 y Fk(Y)378 1580 y Fj(1)415 1568 y Fk(;)14 b(Y)500
1580 y Fj(2)538 1568 y Fk(;)g(:)g(:)g(:)f(;)h(Y)770 1580
y Fh(T)857 1568 y Fl(generated)34 b(according)f(to)h(the)h(durations)f
Fk(d)2302 1580 y Fj(1)2339 1568 y Fk(;)14 b(:)g(:)g(:)g(;)g(d)2567
1580 y Fh(L)2617 1568 y Fl(.)57 b(W)-7 b(e)35 b(still)g(ha)n(v)n(e)f
(the)330 1668 y(partial)27 b(sums)1620 1845 y Fk(p)1662
1857 y Fh(l)1710 1845 y Fl(=)1848 1741 y Fh(l)1799 1766
y Fd(X)1798 1945 y Fh(k)q Fj(=1)1933 1845 y Fk(d)1976
1857 y Fh(k)2017 1845 y Fk(:)330 2069 y Fl(But)i(no)n(w)f(w)n(e)h(also)
f(ha)n(v)n(e)f(a)i(second)f(sequence)g Fk(Z)1896 2081
y Fj(1)1933 2069 y Fk(;)14 b(:)g(:)g(:)g(;)g(Z)2175 2081
y Fh(U)2259 2069 y Fl(and)29 b(a)f(second)g(set)h(of)g(durations)330
2168 y Fk(e)369 2180 y Fj(1)406 2168 y Fk(;)14 b(:)g(:)g(:)f(;)h(e)629
2180 y Fh(L)706 2168 y Fl(with)29 b(partial)d(sums)1625
2345 y Fk(q)1662 2357 y Fh(l)1710 2345 y Fl(=)1848 2241
y Fh(l)1798 2266 y Fd(X)1798 2445 y Fh(k)q Fj(=1)1933
2345 y Fk(e)1972 2357 y Fh(k)2012 2345 y Fk(:)330 2569
y Fl(The)i(join)n(t)f(probabilit)n(y)g(of)g(observ)n(ed)g(and)g(hidden)
h(data)f(b)r(ecomes)438 2752 y(Pr)o(\()p Fk(Y)626 2718
y Fh(T)607 2772 y Fj(1)678 2752 y Fk(;)14 b(Z)778 2718
y Fh(U)772 2772 y Fj(1)833 2752 y Fk(;)g(X)946 2718 y
Fh(L)939 2772 y Fj(1)995 2752 y Fk(;)g(d)1075 2718 y
Fh(L)1075 2772 y Fj(1)1125 2752 y Fk(;)g(e)1201 2718
y Fh(L)1201 2772 y Fj(1)1250 2752 y Fl(\))23 b(=)g Fk(\031)1440
2764 y Fh(X)1494 2772 y Fb(1)1555 2752 y Fk(f)1596 2764
y Fh(X)1650 2772 y Fb(1)1687 2752 y Fl(\()p Fk(d)1762
2764 y Fj(1)1799 2752 y Fk(;)14 b(e)1875 2764 y Fj(1)1912
2752 y Fl(\))p Fi(\001)604 2958 y(\001)23 b Fk(b)686
2970 y Fh(X)740 2978 y Fb(1)777 2958 y Fl(\()p Fk(Y)876
2918 y Fh(p)910 2926 y Fb(1)857 2980 y Fj(1)947 2958
y Fk(;)14 b(Z)1047 2918 y Fh(q)1077 2926 y Fb(1)1041
2980 y Fj(1)1113 2958 y Fl(\))1190 2854 y Fh(L)1159 2879
y Fd(Y)1160 3057 y Fh(l)p Fj(=2)1279 2958 y Fk(a)1323
2970 y Fh(X)1377 2979 y Fe(l)p Fc(\000)p Fb(1)1475 2970
y Fh(;X)1549 2979 y Fe(l)1601 2958 y Fk(f)1642 2970 y
Fh(X)1696 2979 y Fe(l)1724 2958 y Fl(\()p Fk(d)1799 2970
y Fh(l)1825 2958 y Fk(;)g(e)1901 2970 y Fh(l)1926 2958
y Fl(\))24 b Fk(b)2018 2970 y Fh(X)2072 2979 y Fe(l)2100
2958 y Fl(\()p Fk(Y)2199 2918 y Fh(p)2233 2927 y Fe(l)2180
2980 y Fh(p)2214 2989 y Fe(l)p Fc(\000)p Fb(1)2312 2980
y Fj(+1)2401 2958 y Fk(;)14 b(Z)2501 2918 y Fh(q)2531
2927 y Fe(l)2495 2980 y Fh(q)2525 2989 y Fe(l)p Fc(\000)p
Fb(1)2622 2980 y Fj(+1)2710 2958 y Fi(j)p Fk(Y)2800 2913
y Fh(p)2834 2922 y Fe(l)p Fc(\000)p Fb(1)2781 2980 y
Fj(1)2936 2958 y Fk(;)g(Z)3036 2913 y Fh(q)3066 2922
y Fe(l)p Fc(\000)p Fb(1)3030 2980 y Fj(1)3167 2958 y
Fl(\))p Fk(:)330 3259 y Fa(4.1)112 b(The)38 b(forw)m(ard)g(algorithm)
330 3413 y Fl(The)28 b(forw)n(ard)e(v)-5 b(ariables)26
b(are)435 3595 y Fk(\013)488 3607 y Fh(k)529 3595 y Fl(\()p
Fk(t;)14 b(u)p Fl(\))83 b(=)g(Pr)o(\()p Fk(Y)1127 3561
y Fh(t)1108 3616 y(q)1156 3595 y Fk(;)14 b(Z)1256 3561
y Fh(u)1250 3616 y Fj(1)1299 3595 y Fk(;)g Fi(f)p Fl(some)26
b(hidden)i(state)g(ends)f(in)h Fk(s)2386 3607 y Fh(k)2455
3595 y Fl(at)f(\()p Fk(t;)14 b(u)p Fl(\))p Fi(g)p Fl(\))791
3748 y(=)945 3669 y Fd(X)939 3847 y Fh(j;d;e)1085 3748
y Fk(\013)1138 3760 y Fh(j)1173 3748 y Fl(\()p Fk(t)19
b Fi(\000)f Fk(d;)c(u)k Fi(\000)g Fk(e)p Fl(\))24 b Fk(a)1705
3760 y Fh(j)s(k)1800 3748 y Fk(f)1841 3760 y Fh(k)1881
3748 y Fl(\()p Fk(d;)14 b(e)p Fl(\))24 b Fk(b)2124 3760
y Fh(i)2152 3748 y Fl(\()p Fk(Y)2251 3713 y Fh(t)2232
3768 y(t)p Ff(\000)p Fh(d)p Fj(+1)2432 3748 y Fk(;)14
b(Z)2532 3713 y Fh(u)2526 3768 y(u)p Ff(\000)p Fj(1+1)2738
3748 y Fi(j)p Fk(Y)2828 3712 y Fh(t)p Ff(\000)p Fh(d)2809
3770 y Fj(1)2943 3748 y Fk(;)g(Z)3043 3712 y Fh(u)p Ff(\000)p
Fh(e)3037 3770 y Fj(1)3170 3748 y Fl(\))p Fk(:)330 4016
y Fl(The)28 b(lik)n(eliho)r(o)r(d)f(of)g(the)h(observ)n(ed)e(sequences)
h(is)h(then)1343 4275 y Fk(P)12 b Fl(\()p Fk(Y)1507 4241
y Fh(T)1488 4296 y Fj(1)1559 4275 y Fk(;)i(Z)1659 4241
y Fh(U)1653 4296 y Fj(1)1714 4275 y Fl(\))23 b(=)1888
4171 y Fh(N)1857 4196 y Fd(X)1863 4373 y Fh(i)p Fj(=1)1991
4275 y Fk(\013)2044 4287 y Fh(i)2071 4275 y Fl(\()p Fk(T)7
b(;)14 b(U)9 b Fl(\))p Fk(:)330 4575 y Fa(4.2)112 b(The)38
b(Viterbi)d(algorithm)330 4728 y Fl(The)27 b(Viterbi)h(v)-5
b(ariables)26 b(are)g(the)i(same)f(as)f(the)i(forw)n(ard)e(with)h(the)h
(sums)f(replaced)g(b)n(y)g(max-)330 4828 y(ima.)330 5060
y Fa(4.3)112 b(Exon)38 b(pair)f(probabilities)330 5214
y Fl(When)28 b(in)g(an)f(exon)g(state)h(w)n(e)f(can)g(do)g(a)h(PHMM)f
(on)h(the)g(protein)f(lev)n(el.)36 b(Let)380 5426 y Fk(c)416
5438 y Fh(Y)573 5426 y Fl(=)99 b(co)r(don)27 b(in)h(seq)f(Y)380
5526 y Fk(c)416 5538 y Fh(Z)573 5526 y Fl(=)99 b(co)r(don)27
b(in)h(seq)f(Z)1809 5919 y(3)p eop
%%Page: 4 4
4 3 bop 330 390 a Fl(and)26 b(let)h Fk(a)653 402 y Fh(Y)737
390 y Fl(and)g Fk(a)942 402 y Fh(Z)1022 390 y Fl(b)r(e)g(the)g(corresp)
r(onding)e(amino)h(acids.)36 b(Then)26 b(for)h(eac)n(h)e(co)r(don)i
(pair)e(w)n(e)330 490 y(need)j(the)g(probabilit)n(y)514
672 y(Pr)o(\()p Fk(c)671 684 y Fh(Y)729 672 y Fk(;)14
b(c)802 684 y Fh(Z)855 672 y Fk(;)g(a)936 684 y Fh(Y)993
672 y Fk(;)g(a)1074 684 y Fh(Z)1127 672 y Fl(\))84 b(=)e(Pr)o(\()p
Fk(c)1547 684 y Fh(Z)1601 672 y Fk(;)14 b(a)1682 684
y Fh(Y)1739 672 y Fk(;)g(a)1820 684 y Fh(Z)1873 672 y
Fi(j)p Fk(c)1932 684 y Fh(Y)1990 672 y Fl(\)Pr)o(\()p
Fk(c)2179 684 y Fh(Y)2237 672 y Fl(\))1243 797 y(=)82
b(Pr)o(\()p Fk(c)1547 809 y Fh(Y)1605 797 y Fl(\)Pr)o(\()p
Fk(a)1802 809 y Fh(Y)1860 797 y Fi(j)p Fk(c)1919 809
y Fh(Y)1976 797 y Fl(\)Pr\()p Fk(a)2174 809 y Fh(Z)2227
797 y Fi(j)p Fk(a)2294 809 y Fh(Y)2352 797 y Fk(;)14
b(c)2425 809 y Fh(Y)2482 797 y Fl(\)Pr)o(\()p Fk(c)2671
809 y Fh(Z)2725 797 y Fi(j)p Fk(a)2792 809 y Fh(Z)2845
797 y Fk(;)g(a)2926 809 y Fh(Y)2984 797 y Fk(;)g(c)3057
809 y Fh(Y)3114 797 y Fl(\))1243 922 y(=)82 b(Pr)o(\()p
Fk(c)1547 934 y Fh(Y)1605 922 y Fl(\)Pr)o(\()p Fk(a)1802
934 y Fh(Y)1860 922 y Fi(j)p Fk(c)1919 934 y Fh(Y)1976
922 y Fl(\)Pr\()p Fk(c)2166 934 y Fh(Z)2219 922 y Fi(j)p
Fk(a)2286 934 y Fh(Z)2340 922 y Fl(\)Pr)o(\()p Fk(a)2537
934 y Fh(Z)2591 922 y Fi(j)p Fk(a)2658 934 y Fh(Y)2715
922 y Fl(\))p Fk(:)330 1104 y Fl(No)n(w)31 b(Pr)o(\()p
Fk(a)688 1116 y Fh(Y)745 1104 y Fi(j)p Fk(c)804 1116
y Fh(Y)862 1104 y Fl(\))e(=)f(1,)k(Pr)o(\()p Fk(c)1270
1116 y Fh(Y)1327 1104 y Fl(\))g(and)f(Pr)o(\()p Fk(c)1713
1116 y Fh(Z)1766 1104 y Fi(j)p Fk(a)1833 1116 y Fh(Z)1887
1104 y Fl(\))g(are)f(retriev)n(ed)g(from)h(co)r(don)f(usage)g(tables)
330 1204 y(o)n(v)n(er)c(kno)n(wn)h(genes)g(and)g(Pr)o(\()p
Fk(a)1319 1216 y Fh(Z)1373 1204 y Fi(j)p Fk(a)1440 1216
y Fh(Y)1497 1204 y Fl(\))h(comes)f(from)g(a)g(P)-7 b(AM-matrix.)330
1436 y Fa(4.4)112 b(Splice)36 b(mo)s(dels)330 1589 y
Fl(The)27 b(donor)e(signal)g(comprises)h(the)h(last)f(3)g(bases)f(in)i
(the)g(exon)f(and)g(the)h(\014rst)f(6)g(bases)g(in)h(the)330
1689 y(in)n(tron)g(after.)330 1888 y(Highly)j(signi\014can)n(t)f(dep)r
(endencies)h(exist)f(b)r(et)n(w)n(een)h(b)r(oth)g(adjacen)n(t)f(and)h
(non-adjacen)n(t)e(p)r(o-)330 1988 y(sitions,)e(so)e(an)h(MDD)i
(\(maximal)e(dep)r(endence)h(decomp)r(osition\))f(could)g(b)r(e)h(used)
f(to)h(capture)330 2088 y(those.)330 2287 y(The)e(acceptor)e(signal)g
(comprises)h(the)h(last)f(17)f(bases)h(in)h(the)g(in)n(tron)f(and)g
(the)h(\014rst)f(3)g(bases)g(in)330 2386 y(the)29 b(next)g(exon.)38
b(F)-7 b(or)28 b(the)h(acceptor)e(a)h(regular)f(w)n(eigh)n(t)h(matrix)g
(\(suc)n(h)g(as)g(that)h(for)f(pro\014les\))330 2486
y(can)f(b)r(e)h(use.)1809 5919 y(4)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
